plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
}

def generatedDirectory = 'build/generated'
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
	// https://mvnrepository.com/artifact/com.cosium.spring.data/spring-data-jpa-entity-graph
	implementation group: 'com.cosium.spring.data', name: 'spring-data-jpa-entity-graph', version: '2.6.1'
	implementation "com.querydsl:querydsl-jpa:5.0.0"
    annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jpa")
    annotationProcessor "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final"
    annotationProcessor "javax.annotation:javax.annotation-api:1.3.2"
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task generateQueryDSL(type: JavaCompile) {
    source = sourceSets.main.java.srcDirs
    classpath = sourceSets.main.compileClasspath
    getDestinationDirectory().set(file(generatedDirectory))
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs = [
        '-proc:only',
        '-processor',
        'com.querydsl.apt.jpa.JPAAnnotationProcessor'
    ]
}

build.dependsOn generateQueryDSL

eclipse {
  synchronizationTasks generateQueryDSL
  sourceSets {
    main {
      java {
        srcDir generatedDirectory
      }
    }
  }
}
